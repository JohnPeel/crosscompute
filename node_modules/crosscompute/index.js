(function() {

  var users = IR.users;

  if (!users) {
    $('.btn-file').enable();
  }

  var $run_tool_form = $('form.result');

  if ($run_tool_form.length) {

    var $run_tool_options = $('#run-tool-options');
    var $run_tool_button = $run_tool_options.find('.btn-run');
    var $result = $('div.result');

    function run_tool() {
      var $button = $run_tool_button.prop('disabled', true),
          $form = $run_tool_form.trigger('updated.cc'),
          button_text = $button.text();
      $button.text('Running...');
      // Hide feedback
      $('.control-label').removeClass('error').find('.feedback').remove();
      // Send request
      var d = get_form_dictionary($run_tool_options);
      d['x'] = get_form_json($form);
      $.ajax({
        type: 'post',
        url: CC.tool_json_url,
        data: d,
        error: function(jqXHR) {
          var d = jqXHR.responseJSON;
          // Show feedback
          for (k in d) {
            var $input = $('[name=' + k + ']');
            if (!$input.length) {
              continue;
            }
            var $label = $input.parents('.form-group').find('.control-label').first();
            $label.addClass('error').append('<span class="feedback">[ ' + d[k].toUpperCase() + ' ]</span>');
          }
          $form.trigger('failed.cc', jqXHR);
          $button.prop('disabled', false).text(button_text);
        },
        success: function(d) {
          $form.trigger('succeeded.cc', d);
          location.href = d.result_url;
        }
      });
    }

    $run_tool_form.submit(function(e) {
      e.preventDefault();
    });

    $run_tool_button.click(run_tool);

    if ($result.length) {
      setTimeout(function() {
        var offset = $result.offset();
        scrollTo(offset.left, offset.top);
      }, 1);
    }

  }

  $('[data-toggle="popover"]').popover({
    'trigger': 'click hover focus'
  });

}());

function import_upload(e, d, import_url) {
  var $o = $(e.target), $feedback = $o.next('.feedback'),
    argument_name = $o.data('name');
  var target_id = argument_name, $target = $('#' + target_id);

  $.post(import_url, {
    upload_id: d.upload_id,
    argument_name: argument_name
  }).fail(function(x) {
    $feedback.html(x.responseJSON[argument_name]);
  }).success(function(x) {
    $target.html(x);
    $('[name=' + target_id + ']').val(d.upload_id);
    $feedback.text('');
  });
}
